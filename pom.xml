<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2011-2014 The original author or authors
  ~
  ~  All rights reserved. This program and the accompanying materials
  ~  are made available under the terms of the Eclipse Public License v1.0
  ~  and Apache License v2.0 which accompanies this distribution.
  ~
  ~      The Eclipse Public License is available at
  ~      http://www.eclipse.org/legal/epl-v10.html
  ~
  ~      The Apache License v2.0 is available at
  ~      http://www.opensource.org/licenses/apache2.0.php
  ~
  ~  You may elect to redistribute this code under either of these licenses.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.vertx</groupId>
    <artifactId>vertx-parent</artifactId>
    <version>9</version>
  </parent>

  <artifactId>vertx-web-site</artifactId>
  <version>3.7.1</version>

  <name>Vert.x Website</name>

  <!--
  Release guide
  =============
  * Update the project version
  * Update the vertx.version variable
  * Update the vertx.docs.verson variable
  * Remove hacks
  * Remove the content of src/main/asciidoc-override
  -->

  <scm>
    <connection>scm:git:git@github.com:vert-x3/vert-web-site.x.git</connection>
    <developerConnection>scm:git:git@github.com:vert-x3/vert-web-site.x.git</developerConnection>
    <url>git@github.com:vert-x3/vert-web-site.x.git</url>
  </scm>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <vertx.version>3.7.1</vertx.version>
    <vertx.download.version>3.7.1</vertx.download.version>
    <vertx.docs.version>3.7.1</vertx.docs.version>

    <asciidoclet.version>1.5.1</asciidoclet.version>
    <apacheds-protocol-dns.version>1.5.7</apacheds-protocol-dns.version>

    <github.global.server>github</github.global.server>

    <highlightjs.version>8.7</highlightjs.version>

    <host>vertx.io</host>

    <asciidoctorj-pdf.version>1.5.0-alpha.15</asciidoctorj-pdf.version>
    <asciidoctor-maven-plugin.version>1.5.5</asciidoctor-maven-plugin.version>
    <asciidoctorj.version>1.5.5</asciidoctorj.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-stack-docs</artifactId>
      <version>${vertx.docs.version}</version>
      <classifier>docs</classifier>
      <type>zip</type>
    </dependency>

    <dependency>
      <groupId>com.github.vert-x3</groupId>
      <artifactId>vertx-guide-for-java-devs</artifactId>
      <version>1.4.0</version>
      <classifier>docs</classifier>
      <type>zip</type>
    </dependency>

    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>highlightjs</artifactId>
      <version>${highlightjs.version}</version>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>JitPack</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>site</id>
      <activation>
        <property>
          <name>!skipSite</name>
        </property>
      </activation>

      <build>

        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.8</version>
            </plugin>
          </plugins>
        </pluginManagement>

        <plugins>
          <plugin>
            <!--
            Create a data.json file containing various data about the project, such as the version.
            This file is consumed by the templates.
            -->
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.7</version>
            <executions>
              <execution>
                <id>populate-project-data</id>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <phase>pre-site</phase>
                <configuration>
                  <outputDirectory>${project.build.directory}/data</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/data</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <!-- Unpack docs -->
              <execution>
                <id>unpack-docs</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <phase>pre-site</phase>
                <configuration>
                  <includeGroupIds>io.vertx</includeGroupIds>
                  <includeArtifactIds>vertx-stack-docs</includeArtifactIds>
                  <includeTypes>zip</includeTypes>
                  <includeClassifiers>docs</includeClassifiers>
                  <outputDirectory>${project.build.directory}/docs</outputDirectory>
                </configuration>
              </execution>

              <!-- Unpack Java guide -->
              <execution>
                <id>unpack-java-guide</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <phase>pre-site</phase>
                <configuration>
                  <includeGroupIds>com.github.vert-x3</includeGroupIds>
                  <includeArtifactIds>vertx-guide-for-java-devs</includeArtifactIds>
                  <includeTypes>zip</includeTypes>
                  <includeClassifiers>docs</includeClassifiers>
                  <outputDirectory>${project.build.directory}/docs/guide-for-java-devs</outputDirectory>
                </configuration>
              </execution>

              <!-- unpack webjars -->
              <execution>
                <id>unpack-webjars</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <phase>pre-site</phase>
                <configuration>
                  <includeGroupIds>org.webjars</includeGroupIds>
                  <includeArtifactIds>highlightjs</includeArtifactIds>
                  <includes>META-INF/resources/webjars/**/*</includes>
                  <useSubDirectoryPerArtifact>false</useSubDirectoryPerArtifact>
                  <outputDirectory>${project.build.directory}/webjars</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <!-- Process all .adoc files -->
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <version>${asciidoctor-maven-plugin.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj-pdf</artifactId>
                <version>${asciidoctorj-pdf.version}</version>
              </dependency>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctorj</artifactId>
                <version>${asciidoctorj.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <doctype>book</doctype>
              <relativeBaseDir>true</relativeBaseDir>
              <preserveDirectories>true</preserveDirectories>
              <imagesDir>images@</imagesDir>
              <eruby>erb</eruby>
              <templateDir>${basedir}/src/main/docs/templates</templateDir>
            </configuration>
            <executions>
              <execution>
                <id>process-vertx-docs</id>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <backend>html</backend>
                  <attributes>
                    <toc>left</toc>
                    <stylesheet>/stylesheets/docs.css</stylesheet>
                    <linkcss></linkcss>
                    <sourceHighlighter>prettify</sourceHighlighter>
                  </attributes>
                  <sourceDirectory>${project.build.directory}/docs</sourceDirectory>
                  <outputDirectory>${project.build.directory}/docs-generated</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>process-site-docs</id>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <backend>html</backend>
                  <attributes>
                    <toc>left</toc>
                    <stylesheet>/stylesheets/docs.css</stylesheet>
                    <linkcss></linkcss>
                    <sourceHighlighter>prettify</sourceHighlighter>
                  </attributes>
                  <sourceDirectory>${basedir}/src/main/asciidoc</sourceDirectory>
                  <outputDirectory>${project.build.directory}/docs-generated</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>guide-for-java-devs-to-html</id>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <backend>html</backend>
                  <attributes>
                    <toc>left</toc>
                    <stylesheet>/stylesheets/docs.css</stylesheet>
                    <linkcss></linkcss>
                    <rendered-pdf-link>guide-for-java-devs.pdf</rendered-pdf-link>
                    <sourceHighlighter>prettify</sourceHighlighter>
                  </attributes>
                  <sourceDirectory>${project.build.directory}/docs/guide-for-java-devs</sourceDirectory>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <outputDirectory>${project.build.directory}/docs-generated/guide-for-java-devs-override
                  </outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>guide-for-java-devs-to-pdf</id>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <backend>pdf</backend>
                  <sourceHighlighter>rouge</sourceHighlighter>
                  <attributes>
                    <icons>font</icons>
                    <autofit-option></autofit-option>
                    <toc></toc>
                    <toclevels>4</toclevels>
                    <sectnums></sectnums>
                    <front-cover-image>cover.pdf</front-cover-image>
                  </attributes>
                  <sourceDirectory>${project.build.directory}/docs/guide-for-java-devs</sourceDirectory>
                  <sourceDocumentName>index.adoc</sourceDocumentName>
                  <outputDirectory>${project.build.directory}/docs-generated/guide-for-java-devs</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.4</version>
            <configuration>
              <skip>true</skip>
              <skipDeploy>true</skipDeploy>
            </configuration>
          </plugin>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>

              <!-- Fix typos in .ad files, the new .ad are located in src/main/asciidoc-override,
              they must use the final structure -->

              <execution>
                <id>asciidoc-override</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>pre-site</phase>
                <configuration>
                  <target>
                    <copy todir="${project.build.directory}/docs"
                          verbose="true">
                      <fileset dir="${project.basedir}/src/main/asciidoc-override"/>
                    </copy>
                  </target>
                </configuration>
              </execution>

              <execution>
                <configuration>
                  <target>
                    <!-- Copy assets from webjars to site dir -->
                    <copy todir="${project.build.directory}/site/javascripts/styles"
                          file="${project.build.directory}/webjars/META-INF/resources/webjars/highlightjs/${highlightjs.version}/styles/rainbow.min.css"/>
                    <!-- create a nojekyll file -->
                    <touch file="${project.build.directory}/site/.nojekyll"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>site</phase>
              </execution>

              <execution>
                <id>fix-guide-for-java-devs-files</id>
                <goals>
                  <goal>run</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <target>
                    <move file="${project.build.directory}/docs-generated/guide-for-java-devs-override/index.html"
                          todir="${project.build.directory}/docs-generated/guide-for-java-devs"
                          overwrite="true"/>
                    <move file="${project.build.directory}/docs-generated/guide-for-java-devs/index.pdf"
                          tofile="${project.build.directory}/docs-generated/guide-for-java-devs/guide-for-java-devs.pdf"/>
                    <delete dir="${project.build.directory}/docs-generated/guide-for-java-devs-override"/>
                  </target>
                </configuration>
              </execution>

            </executions>
          </plugin>

          <!-- generate site (install node.js and run gulp) -->
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>0.0.28</version>
            <executions>
              <!-- install node.js -->
              <execution>
                <id>install node and npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <nodeVersion>v4.2.2</nodeVersion>
                  <npmVersion>3.4.1</npmVersion>
                </configuration>
              </execution>

              <!-- install npm modules -->
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>site</phase>
                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>

              <!-- run gulp -->
              <execution>
                <id>gulp</id>
                <goals>
                  <goal>gulp</goal>
                </goals>
                <phase>site</phase>
              </execution>
            </executions>
          </plugin>

          <!-- Publish to website -->
          <!-- Replaced by `deploy.sh` because of "too many argument issue" -->
          <!--<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-scm-publish-plugin</artifactId>
            <version>1.1</version>
            <configuration>
              <pubScmUrl>scm:git:git@github.com:vert-x3/vert-x3.github.io.git</pubScmUrl>
              <scmBranch>master</scmBranch>
              <content>${project.build.directory}/site</content>
              <tryUpdate>true</tryUpdate>
            </configuration>
            <executions>
              <execution>
                <phase>site-deploy</phase>
                <goals>
                  <goal>publish-scm</goal>
                </goals>
              </execution>
            </executions>
          </plugin>-->
        </plugins>
      </build>
    </profile>

    <profile>
      <!--
      Build the web site in a docker image.
      To build:
      * Linux: mvn site -Pdocker -Dhost=localhost:4000
      * Mac: mvn site -Pdocker -Dhost=192.168.99.100:4000

      To run:
      docker run -p 4000:80 vert-x3/vertx-web-site

      Open your browser to:
      * Linux: http://localhost:4000
      * Mac: http://192.168.99.100:4000

      Note: the Mac IP may depends of your docker machine installation.
      -->
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jolokia</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.13.9</version>
            <executions>
              <execution>
                <id>build</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <phase>site</phase>
              </execution>
            </executions>
            <configuration>
              <images>
                <image>
                  <name>vert-x3/vertx-web-site</name>
                  <build>
                    <from>nginx</from>
                    <maintainer>Clement Escoffier - clement@apache.org</maintainer>
                    <tags>
                      <tag>latest</tag>
                    </tags>
                    <ports>
                      <port>80</port>
                    </ports>
                    <assembly>
                      <mode>dir</mode>
                      <basedir>/usr/share/nginx/html</basedir>
                      <descriptor>assembly.xml</descriptor>
                    </assembly>
                  </build>
                  <run>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
